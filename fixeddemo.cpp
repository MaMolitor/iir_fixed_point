// Simulates a realtime system by sending a 12 bit integer ECG
// through a 50Hz fixed point IIR bandstop

// standard I/O stuff
#include <stdio.h>
#include <assert.h>

// includes the 2nd order IIR filter
#include "DirectFormI.h"

// Notch filter, 2nd order bandstop which means 2 biquad filters
// 50Hz notch frequency, sampling rate 1kHz
//
// generated by the Python script gen_coeff with q=14
// [ 15672. -29825.  15672.  16384. -30222.  15624.]
// [ 16384. -31180.  16384.  16384. -30753.  15720.]

// We loop through the ECG file with the 50Hz contamination
// and save a file which has the 50Hz removed!
int main (int,char**)
{
	// generated by the script 'gen_coeff.py' and then
	// copy/pasted in the filter
	//DirectFormI biquad1(15672,-29825,15672,16384,-30222,15624,14);
	//DirectFormI biquad2(16384,-31180,16384,16384,-30753,15720,14);
	DirectFormI biquad1(14511,-27615,14511,16384,-30157,15395,14);
	DirectFormI biquad2(16384,-31180,16384,16384,-30362,15442,14);
	DirectFormI biquad3(16384,-31180,16384,16384,-30222,15624,14);
	DirectFormI biquad4(16384,-31180,16384,16384,-30753,15720,14);
	DirectFormI biquad5(16384,-31180,16384,16384,-30572,16095,14);
	DirectFormI biquad6(16384,-31180,16384,16384,-31228,16144,14);
	
	
	FILE *finput = fopen("ecg2.dat","rt");
	assert(finput != NULL);
	FILE *foutput = fopen("ecg2_filtered.dat","wt");
	assert(foutput != NULL);
	for(;;) 
	{
		// the data file has 3 channels and time
		short x1,x2,x3,y;
		int t;
		if (fscanf(finput,"%d %hd %hd %hd\n",&t,&x1,&x2,&x3)<1) break;
		y = biquad1.filter(x2);
		y = biquad2.filter(y);
		y = biquad3.filter(y);
		y = biquad4.filter(y);
		y = biquad5.filter(y);
		y = biquad6.filter(y);
		fprintf(foutput,"%d %hd\n",t,y);
	}
	fclose(finput);
	fclose(foutput);
	fprintf(stderr,"Done!\n");
	return 0;
}
